
//  Code generated automatically to be filled manually
//  This file will not be updated by generator
//  It's created just the first time as a reference

//  This file will be included in _gen.cpp
//  (anywhere else)

//  to make happy some IDEs
#include "fsm_iceberg_types.h"
#include "fsm_iceberg_gen.h"

namespace {
    using namespace iceberg;

    //  log
    template <typename IN, typename INIT_ST, typename END_ST>
    void log(const std::string &txt_trans, const IN &, const INIT_ST &,
            const END_ST &) {
        std::cout << txt_trans << std::endl;
    }

    //  status change functions
    template <typename FROM, typename IN> st_init_t from_in2init(const FROM&, const IN&) { return st_init_t{}; }
    template <typename FROM, typename IN> st_w_cf_nw_t from_in2w_cf_nw(const FROM&, const IN&) { return st_w_cf_nw_t{}; }
    template <typename FROM, typename IN> st_modifying_w_nw_t from_in2modifying_w_nw(const FROM&, const IN&) { return st_modifying_w_nw_t{}; }
    template <typename FROM, typename IN> st_modifying_w_cc_t from_in2modifying_w_cc(const FROM&, const IN&) { return st_modifying_w_cc_t{}; }
    template <typename FROM, typename IN> st_canceling_w_nw_t from_in2canceling_w_nw(const FROM&, const IN&) { return st_canceling_w_nw_t{}; }
    template <typename FROM, typename IN> st_market_t from_in2market(const FROM&, const IN&) { return st_market_t{}; }
    template <typename FROM, typename IN> st_canceling_w_cc_t from_in2canceling_w_cc(const FROM&, const IN&) { return st_canceling_w_cc_t{}; }
    template <typename FROM, typename IN> st_end_t from_in2end(const FROM&, const IN&) { return st_end_t{}; }
    template <typename FROM, typename IN> st_error_t from_in2error(const FROM&, const IN&) { return st_error_t{}; }
    template <typename FROM, typename IN> st_error2_t from_in2error2(const FROM&, const IN&) { return st_error2_t{}; }


    //  guards
    bool timeout(const in_timer_t& /*in*/, const st_w_cf_nw_t& /*st_from*/) { return true; }
    bool timeout(const in_timer_t& /*in*/, const st_modifying_w_nw_t& /*st_from*/) { return true; }
    bool full_cli(const in_cf_ex_t& /*in*/, const st_modifying_w_cc_t& /*st_from*/) { return true; }
    bool full_mk(const in_cf_ex_t& /*in*/, const st_modifying_w_cc_t& /*st_from*/) { return true; }
    bool partial_mk(const in_cf_ex_t& /*in*/, const st_modifying_w_cc_t& /*st_from*/) { return true; }
    bool timeout(const in_timer_t& /*in*/, const st_modifying_w_cc_t& /*st_from*/) { return true; }
    bool timeout(const in_timer_t& /*in*/, const st_canceling_w_nw_t& /*st_from*/) { return true; }
    bool full_cli(const in_cf_ex_t& /*in*/, const st_market_t& /*st_from*/) { return true; }
    bool full_mk(const in_cf_ex_t& /*in*/, const st_market_t& /*st_from*/) { return true; }
    bool partial_mk(const in_cf_ex_t& /*in*/, const st_market_t& /*st_from*/) { return true; }
    bool full_cli(const in_cf_ex_t& /*in*/, const st_canceling_w_cc_t& /*st_from*/) { return true; }
    bool full_mk(const in_cf_ex_t& /*in*/, const st_canceling_w_cc_t& /*st_from*/) { return true; }
    bool partial_mk(const in_cf_ex_t& /*in*/, const st_canceling_w_cc_t& /*st_from*/) { return true; }
    bool timeout(const in_timer_t& /*in*/, const st_canceling_w_cc_t& /*st_from*/) { return true; }


    //  actions
    void act_send_rq_nw(const st_init_t& /*from*/, const in_rq_nw_t& /*input*/, const st_w_cf_nw_t& /*st_dest*/) {}
    void act_send_rj_nw(const st_w_cf_nw_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_w_cf_nw_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_w_cf_nw_t& /*from*/, const in_cf_ex_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_w_cf_nw_t& /*from*/, const in_cf_ex_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_w_cf_nw_t& /*from*/, const in_timer_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rj_nw(const st_modifying_w_nw_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_modifying_w_nw_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_modifying_w_nw_t& /*from*/, const in_cf_nw_t& /*input*/, const st_modifying_w_cc_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_modifying_w_nw_t& /*from*/, const in_cf_ex_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_modifying_w_nw_t& /*from*/, const in_cf_ex_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_modifying_w_nw_t& /*from*/, const in_timer_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rj_nw(const st_modifying_w_cc_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_modifying_w_cc_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_modifying_w_cc_t& /*from*/, const in_cf_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_modifying_w_cc_t& /*from*/, const in_cf_ex_t& /*input*/, const st_end_t& /*st_dest*/) {}
    void act_send_cf_cc(const st_modifying_w_cc_t& /*from*/, const in_cf_ex_t& /*input*/, const st_end_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_modifying_w_cc_t& /*from*/, const in_cf_ex_t& /*input*/, const st_modifying_w_cc_t& /*st_dest*/) {}
    void act_send_rq_nw(const st_modifying_w_cc_t& /*from*/, const in_cf_cc_t& /*input*/, const st_modifying_w_nw_t& /*st_dest*/) {}
    void act_warning_timer(const st_modifying_w_cc_t& /*from*/, const in_timer_t& /*input*/, const st_modifying_w_cc_t& /*st_dest*/) {}
    void act_send_rj_nw(const st_canceling_w_nw_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_canceling_w_nw_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rj_md(const st_canceling_w_nw_t& /*from*/, const in_rq_md_t& /*input*/, const st_canceling_w_nw_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_canceling_w_nw_t& /*from*/, const in_rq_cc_t& /*input*/, const st_canceling_w_nw_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_canceling_w_nw_t& /*from*/, const in_cf_nw_t& /*input*/, const st_canceling_w_cc_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_canceling_w_nw_t& /*from*/, const in_cf_ex_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_warning_timer(const st_canceling_w_nw_t& /*from*/, const in_timer_t& /*input*/, const st_canceling_w_nw_t& /*st_dest*/) {}
    void act_send_rj_nw(const st_market_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_market_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_market_t& /*from*/, const in_rq_md_t& /*input*/, const st_modifying_w_cc_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_market_t& /*from*/, const in_rq_cc_t& /*input*/, const st_canceling_w_cc_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_market_t& /*from*/, const in_cf_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_market_t& /*from*/, const in_cf_ex_t& /*input*/, const st_end_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_market_t& /*from*/, const in_cf_ex_t& /*input*/, const st_w_cf_nw_t& /*st_dest*/) {}
    void act_send_rq_nw(const st_market_t& /*from*/, const in_cf_ex_t& /*input*/, const st_w_cf_nw_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_market_t& /*from*/, const in_cf_ex_t& /*input*/, const st_market_t& /*st_dest*/) {}
    void act_send_cf_cc(const st_market_t& /*from*/, const in_cf_cc_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rj_nw(const st_canceling_w_cc_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_canceling_w_cc_t& /*from*/, const in_rq_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_rj_md(const st_canceling_w_cc_t& /*from*/, const in_rq_md_t& /*input*/, const st_canceling_w_cc_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_canceling_w_cc_t& /*from*/, const in_rq_cc_t& /*input*/, const st_canceling_w_cc_t& /*st_dest*/) {}
    void act_send_rq_cc(const st_canceling_w_cc_t& /*from*/, const in_cf_nw_t& /*input*/, const st_error_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_canceling_w_cc_t& /*from*/, const in_cf_ex_t& /*input*/, const st_end_t& /*st_dest*/) {}
    void act_send_cf_cc(const st_canceling_w_cc_t& /*from*/, const in_cf_ex_t& /*input*/, const st_end_t& /*st_dest*/) {}
    void act_send_cf_ex(const st_canceling_w_cc_t& /*from*/, const in_cf_ex_t& /*input*/, const st_canceling_w_cc_t& /*st_dest*/) {}
    void act_send_cf_cc(const st_canceling_w_cc_t& /*from*/, const in_cf_cc_t& /*input*/, const st_end_t& /*st_dest*/) {}
    void act_warning_timer(const st_canceling_w_cc_t& /*from*/, const in_timer_t& /*input*/, const st_canceling_w_nw_t& /*st_dest*/) {}
    template<typename IN> void act_rq_cc(const st_error_t& /*from*/, const IN& /*input*/, const st_error2_t& /*st_dest*/) {}


} // namespace anonymous
